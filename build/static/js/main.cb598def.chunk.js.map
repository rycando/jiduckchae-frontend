{"version":3,"sources":["_actions/types.js","_actions/user_action.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","utils/ReusableUtils.js","components/views/UploadPage/Section/DropAndCrop.js","components/views/UploadPage/UploadPage.js","components/views/MyPage/MyPage.js","components/views/EntUploadPage/EntUploadPage.js","components/views/ArtistUploadPage/ArtistUploadPage.js","components/views/ProdDetailPage/Section/Like.js","components/views/ProdDetailPage/Section/SingleComment.js","components/views/ProdDetailPage/Section/ReplyComment.js","components/views/ProdDetailPage/Section/Comment.js","components/views/ProdDetailPage/ProdDetailPage.js","components/views/ArtistDetailPage/Section/GridCard.js","components/views/ArtistDetailPage/ArtistDetailPage.js","components/views/ProdModifyPage/ProdModifyPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["LOGIN_USER","AUTH_USER","REGISTER_USER","auth","request","axios","get","then","response","data","type","payload","SpecificComponent","option","adminRoute","AuthenticationCheck","props","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","MainImage","href","prodId","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","text","GridCards","lg","md","xs","src","alt","prodName","withRouter","useState","BestProds","setBestProds","MainProd","setMainProd","Page","setPage","Prods","setProds","Axios","prods","_id","post","page","console","log","margin","preImagePath","name","content","gutter","alignItems","map","prod","index","Fragment","display","justifyContent","onClick","email","password","values","setValues","onChange","e","target","value","flexDirection","onSubmit","preventDefault","dataToSubmit","loginUser","loginSuccess","window","localStorage","setItem","userId","alert","padding","borderRadius","backgroundColor","marginBottom","placeholder","minWidth","border","outline","boxShadow","id","passwordCheck","registerUser","success","SubMenu","Menu","ItemGroup","LeftMenu","mode","Item","user","useSelector","state","Artists","setArtists","Ents","setEnts","ents","artists","userData","ent","artist","aindex","entId","NavBar","Visible","setVisible","className","zIndex","placement","closable","onClose","visible","base64StringtoFile","base64String","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","DropAndCrop","aspect","x","y","unit","Crop","setCrop","ImageRef","setImageRef","imagePreviewCanvasRef","canvas","setImageExt","setOriginFile","OriginFile","ImageSrc","setImageSrc","imageMaxSize","acceptedFileTypes","acceptedFileTypesArray","item","trim","verifyFile","files","currentFile","currentFileType","size","includes","crop","onImageLoaded","onComplete","canvasRef","current","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","getCroppedImg","makeClientCrop","onDrop","rejectedFiles","file","reader","FileReader","addEventListener","base64Data","myResult","result","substring","indexOf","readAsDataURL","multieple","maxSize","accept","getRootProps","getInputProps","ref","event","clearRect","TextArea","Input","Title","Typography","Category","setCategory","ProdName","setProdName","setArtist","Content","setContent","Link","setLink","Date","StartDate","setStartDate","EndDate","setEndDate","ImageExt","React","createRef","uuid","v4","a","FileName","imgSrcExt","imageData64","toDataURL","originFilename","newCroppedFile","preFilename","put","postURL","preImage","variable","getURL","message","textAlign","level","ext","currentTarget","date","marginRight","paddingLeft","MyPage","LikeProds","setLikeProds","MyProds","setMyProds","getItem","likeProd","process","REACT_APP_SERVER","myProd","EntUploadPage","EntName","setEntName","ImagePath","setImagePath","setTimeout","formData","FormData","append","header","url","err","ArtistUploadPage","ArtistName","setArtistName","Like","commentId","Likes","setLikes","LikeAction","setLikeAction","likes","like","theme","cursor","SingleComment","OpenReply","setOpenReply","CommentValue","setCommentValue","variables","responseTo","comment","refreshFunction","commentInfo","actions","author","avatar","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","Comment","commentValue","setcommentValue","commentLists","Prod","setProd","Comments","setComments","setMainImage","PreImage","setPreImage","DDay","setDDay","today","moment","format","params","originName","PreName","mainImage","endDate","diff","comments","alignContent","artistId","objectFit","fontWeight","backgroundImage","link","marginTop","mainImagePath","newComment","concat","GridCard","OnDrop","setOnDrop","MainImagePath","setMainImagePath","PreImagePath","setPreImagePath","startDate","onDropClick","selected","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LandingPage","LoginPage","RegisterPage","UploadPage","ProdDetailPage","ArtistDetailPage","ProdModifyPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb598def.chunk.js","sourcesContent":["export const LOGIN_USER = \"login_user\";\nexport const AUTH_USER = \"auth_user\";\nexport const REGISTER_USER = \"register_user\";\n","import {\n    LOGIN_USER,\n    AUTH_USER,\n    REGISTER_USER\n} from './types'\nimport axios from 'axios'\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post('/api/user/login', dataToSubmit)\n        .then(response => response.data)\n        \n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth() {\n    const request = axios.get('/api/user/auth')\n        .then(response => response.data)\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function registerUser(dataToSubmit) {\n    const request = axios.post('/api/user/register', dataToSubmit)\n        .then(response => response.data)\n\n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../_actions/user_action'\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    //null => 아무나 출입 가능\n    //true => 로그인한 유저만 출입 가능\n    //false => 로그인한 유저는 출입 불가능\n\n\n    function AuthenticationCheck (props) {\n\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(response => {\n                //로그인 하지 않은 상태\n                if(!response.payload.isAuth) {\n                    if(option) {\n                        props.history.push('/login')\n                    }\n                } else {\n                    //로그인 한 상태\n                    if(adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    } else if (option === false && option !== null) {\n                        props.history.push('/')\n                    }\n                }\n            })\n         }, [])\n        return (\n            <SpecificComponent />\n        )\n    }\n    return AuthenticationCheck\n}","import React from 'react'\n\nfunction MainImage(props) {\n    return (\n        <a href={`/prod/${props.prodId}`}>\n            <div style={{ background: `linear-gradient(to bottom, rgba(0,0,0,0)\n            39%,rgba(0,0,0,0)\n            41%,rgba(0,0,0,0.65)\n            100%),\n            url('${props.image}'), #1c1c1c`,\n                height: '500px',\n                backgroundSize: 'contain',\n                // backgroundRepeat: 'no-repeat',\n                backgroundPosition: 'center',\n                width: '100%',\n                position: 'relative'\n            }}>\n                <div>\n                    <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem' }}>\n                        <h2 style={{ color: 'white' }}> {props.title} </h2>\n                        <p style={{ color: 'white', fontSize: '1rem' }}>{props.text}</p>\n                    </div>\n                </div>\n            </div>\n        </a>\n    )\n}\n\nexport default MainImage\n","import React from 'react'\nimport { Col } from 'antd'\n\n\nfunction GridCards(props) {\n    return (\n        <Col lg={6} md={8} xs={24}>\n            <div style={{ position: 'relative' }}>\n                <a href={`/prod/${props.prodId}`}>\n                    <img style={{ width: '100%', height: '100%' }} src={props.image} alt={props.prodName}/>\n                </a>\n            </div>\n        </Col>\n    )\n}\n\nexport default GridCards\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios'\nimport { Row } from 'antd'\nimport MainImage from './Sections/MainImage'\nimport GridCards from '../commons/GridCards'\n\nfunction LandingPage(props) {\n\n    const [BestProds, setBestProds] = useState([])\n    const [MainProd, setMainProd] = useState([])\n    const [Page, setPage] = useState(0)\n    const [Prods, setProds] = useState([])\n\n    useEffect(() => {\n        Axios.get('/api/like/getBestProds')\n            .then(response => {\n                setBestProds(response.data.prods)\n                setMainProd(response.data.prods[0]._id)\n            })\n    }, [])\n\n    useEffect(() => {\n        Axios.post('/api/prod/getProds', {page: Page})\n            .then(response => {\n                console.log(response.data.prods)\n                console.log(Page)\n                setProds([...Prods,...response.data.prods])\n            })\n    }, [Page])\n\n\n    const loadMoreItems = () => {\n        setPage(Page+1)\n    }\n\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n            {MainProd &&\n                <MainImage\n                    image={`${MainProd.preImagePath}`}\n                    title={MainProd.name}\n                    text={MainProd.content}\n                    prodId={MainProd._id}\n                />\n            }\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2> 가장 인기있는 굿즈 </h2>\n                <hr />\n                <Row gutter={[16, 16]} type=\"flex\" style={{ alignItems: 'center' }}>\n                    {BestProds && BestProds.map((prod, index) => (\n                        <React.Fragment key={index}>\n                            <GridCards\n                                image={`${prod._id.preImagePath}`}\n                                prodId={prod._id._id}\n                                prodName={prod._id.name}\n                            />\n                        </React.Fragment>\n                    ))}\n                </Row>\n                <hr />\n                <h2> 새로운 굿즈 </h2>\n                <hr />\n                <Row gutter={[16, 16]} type=\"flex\" style={{ alignItems: 'center' }}>\n                    {Prods && Prods.map((prod, index) => (\n                        <React.Fragment key={index}>\n                            <GridCards\n                                image={`${prod.preImagePath}`}\n                                prodId={prod._id}\n                                prodName={prod.name}\n                            />\n                        </React.Fragment>\n                    ))}\n                </Row>\n            </div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <button onClick={loadMoreItems}>Load More</button>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default withRouter(LandingPage)\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../../../_actions/user_action'\nimport { withRouter } from 'react-router-dom'\n\nfunction LoginPage(props) {\n\n    const dispatch = useDispatch();\n\n    const [values, setValues] = useState({\n        email: '',\n        password: ''\n    });\n\n    const {\n        email,\n        password\n    } = values;\n    \n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        });\n    };\n\n    const onSubmitHandler = (e) => {\n\n        e.preventDefault();\n\n        let body ={\n            email: email,\n            password: password\n        }\n\n        dispatch(loginUser(body))\n            .then(response => {\n                if (response.payload.loginSuccess){\n                    window.localStorage.setItem('userId', response.payload.userId)\n                    props.history.push('/')\n                } else {\n                    alert('Error')\n                }\n            })\n    }\n\n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems:'center',\n            width: '100%',\n            height: '100vh' }}>\n            <form style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                width: '440px',\n                height: '70vh',\n                justifyContent: 'center',\n            }}\n            onSubmit={onSubmitHandler}>\n                {/* logo */}\n                <div style={{\n                    width: '140px',\n                    height: '140px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#ffdf80',\n                    marginBottom: '50px'\n                }}>\n                    <div style={{\n                    width: '100px',\n                    height: '100px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#ffffff',\n                    margin: '10px 0px 20px 50px'\n                }} />\n\n                </div>\n                {/* logo */}\n                <input\n                    type=\"email\"\n                    placeholder=\"이메일을 입력하세요\"\n                    name=\"email\"\n                    value={email}\n                    onChange={onChange}\n                    style={{\n                        maxWidth: '280px',\n                        minWidth: '220px',\n                        padding: '0px 0.5rem',\n                        height: '40px',\n                        margin: '5px',\n                        borderRadius: '5px',\n                        border: '1px solid rgba(0,0,0,0.2)',\n                    }}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호를 입력하세요\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChange}\n                    style={{\n                        maxWidth: '280px',\n                        minWidth: '220px',\n                        padding: '0px 0.5rem',\n                        height: '40px',\n                        margin: '5px',\n                        borderRadius: '5px',\n                        border: '1px solid rgba(0,0,0,0.2)'\n                    }}\n                />\n                <button\n                    type=\"submit\"\n                    style={{\n                        maxWidth: '300px',\n                        minWidth: '240px',\n                        height: '40px',\n                        margin: '20px',\n                        backgroundColor: '#ffdf80',\n                        border: 'none',\n                        outline: 'none',\n                        borderRadius: '5px',\n                        boxShadow: '0 1px 2px rgba(0,0,0,0.1)',\n                        border: '1px solid rgba(0,0,0,0.02)',\n                        fontWeight: '800',\n                        color: 'white'\n                    }}>\n                        로그인\n                </button>\n                                {/* icons */}\n            <div style={{\n                width: '200px',\n                height: '100px',\n                display: 'flex',\n                justifyContent:'space-between',\n                alignItems: 'center',\n                marginBottom: '10px'\n            }}>\n                <div style={{\n                    width: '40px',\n                    height: '40px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#ccffcc'\n                }} />\n                <div style={{\n                    width: '40px',\n                    height: '40px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#cce6ff'\n                }} />\n\n                <div style={{\n                    width: '40px',\n                    height: '40px',\n                    padding: '0',\n                    borderRadius: '50%',\n                    backgroundColor: '#f2ccff'\n                }} />\n            </div>\n            {/* icons */}\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(LoginPage)\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { registerUser } from '../../../_actions/user_action'\nimport { withRouter } from 'react-router-dom'\n\nfunction RegisterPage(props) {\n    const dispatch = useDispatch();\n    \n    const [values, setValues] = useState({\n        id: \"\",\n        email: \"\",\n        password: \"\",\n        passwordCheck: \"\"\n    });\n\n    const {\n        id,\n        email,\n        password,\n        passwordCheck\n    } = values;\n\n    const onChange = (e) => {\n        const { value, name } = e.target;\n        setValues({\n            ...values,\n            [name]: value\n        });\n    };\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n\n        if(password !== passwordCheck) {\n            return alert('비밀번호와 비밀번호 확인은 같아야합니다.')\n        }\n        let body = {\n            name: id,\n            email: email,\n            password: password\n        }\n\n        dispatch(registerUser(body))\n            .then(response => {\n                if (response.payload.success){\n                    props.history.push('/login')\n                } else {\n                    alert('Error')\n                }\n            })\n    }\n    \n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems:'center',\n            width: '100%',\n            height: '100vh' }}>\n            <form style={{\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                width: '70%',\n                height: '70vh',\n                justifyContent: 'center'\n            }}\n            onSubmit={onSubmitHandler}>\n                <input\n                    type=\"text\"\n                    placeholder=\"아이디를 입력하세요\"\n                    name=\"id\"\n                    value={id}\n                    onChange={onChange}\n                    style={{\n                        width: '35%',\n                        height: '40px',\n                        margin: '5px'\n                    }}\n                />\n                <input\n                    type=\"email\"\n                    placeholder=\"이메일을 입력하세요\"\n                    name=\"email\"\n                    value={email}\n                    onChange={onChange}\n                    style={{\n                        width: '35%',\n                        height: '40px',\n                        margin: '5px'\n                    }}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호를 입력하세요\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChange}\n                    style={{\n                        width: '35%',\n                        height: '40px',\n                        margin: '5px'\n                    }}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호를 한 번 더 입력하세요\"\n                    name=\"passwordCheck\"\n                    value={passwordCheck}\n                    onChange={onChange}\n                    style={{\n                        width: '35%',\n                        height: '40px',\n                        margin: '5px'\n                    }}\n                />\n                <button\n                    type=\"submit\"\n                    style={{\n                        width: '35%',\n                        height: '40px',\n                        margin: '20px'\n                    }}>\n                        회원가입하기\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(RegisterPage)\n","import React from 'react'\nimport { Menu } from 'antd'\nconst SubMenu = Menu.SubMenu\nconst MenuItemGroup = Menu.ItemGroup\n\nconst options = [\n    \n]\n\nfunction LeftMenu(props) {\n    return (\n        <Menu mode={props.mode}>\n            <Menu.Item key=\"mail\">\n                <a href=\"/\">Home</a>\n            </Menu.Item>\n            <SubMenu title={<span>Uploads</span>}>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/upload\">Upload</a>\n                </Menu.Item>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/uploadEnt\">EntUpload</a>\n                </Menu.Item>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/uploadArtist\">ArtistUpload</a>\n                </Menu.Item>\n            </SubMenu>\n        </Menu>\n    )\n}\n\nexport default LeftMenu\n","import React, { useState, useEffect } from 'react'\nimport { Menu } from 'antd'\nimport { useSelector } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios'\n\nconst { SubMenu } = Menu;\n\nfunction RightMenu(props) {\n    const user = useSelector(state => state.user)\n\n    const [Artists, setArtists] = useState([])\n    const [Ents, setEnts] = useState([])\n\n    useEffect(() => {\n        Axios.get('/api/ent/all')\n            .then(response => {\n                if(response.data.success) {\n                    setEnts(response.data.ents)\n                } else {\n                    alert('엔터 정보를 가져오는데 실패했습니다.')\n                }\n            })\n\n        Axios.get('/api/artist/all')\n            .then(response => {\n                if(response.data.success) {\n                    setArtists(response.data.artists)\n                } else {\n                    alert('아티스트 정보를 가져오는데 실패했습니다.')\n                }\n            })\n    }, [])\n\n\n    const logoutHandler = () => {\n        Axios.get('/api/user/logout')\n            .then(response => {\n                if(response.data.success) {\n                    props.history.push(\"/login\")\n                } else {\n                    alert('로그아웃에 실패했습니다.')\n                }\n            })\n    }\n    \n    if(user.userData && !user.userData.isAuth) {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"mail\">\n                    <a href=\"/login\">Signin</a>\n                </Menu.Item>\n                <Menu.Item key=\"app\">\n                    <a href=\"/register\">Signup</a>\n                </Menu.Item>\n            </Menu>\n        )\n    } else {\n        return (\n            <Menu mode={props.mode}>\n                <SubMenu key=\"artist\" title=\"Artist\">\n                    {Ents && Artists &&\n                        Ents.map((ent, index) => (\n                            <SubMenu key={index} title={ent.name}>\n                                {\n                                    Artists.map((artist, aindex) => {\n                                        if (artist.entId === ent._id) {\n                                            return (\n                                            <Menu.Item key={`artsit${aindex}`}>\n                                                <a href={`/artist/${artist._id}`}>\n                                                    {artist.name}\n                                                </a>\n                                            </Menu.Item>\n                                            )\n                                        }\n                                    })\n                                }\n                            </SubMenu>\n                        ))    \n                    }\n                </SubMenu>\n                <Menu.Item key=\"upload\">\n                    <a href=\"/mypage\">MyPage</a>\n                </Menu.Item>\n                <Menu.Item key=\"logout\">\n                    <a onClick={logoutHandler}>Logout</a>\n                </Menu.Item>\n            </Menu>\n        )\n    }\n}\n\nexport default withRouter(RightMenu)\n","import React, { useState } from 'react';\nimport { Drawer, Button, Icon } from 'antd';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport './Sections/Navbar.css'\n\nfunction NavBar() {\n\n    const [Visible, setVisible] = useState(false)\n\n    const showDrawer = () => {\n        setVisible(true)\n    }\n\n    const onClose = () => {\n        setVisible(false)\n    }\n\n\n    return (\n        <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n            <div className=\"menu__logo\">\n                <a href=\"/\">Logo</a>\n            </div>\n            <div className=\"menu__container\">\n                <div className=\"menu_left\">\n                    <LeftMenu mode=\"horizontal\" />\n                </div>\n                <div className=\"menu_right\">\n                    <RightMenu mode=\"horizontal\" />\n                </div>\n                <Button\n                    className=\"menu__mobile-button\"\n                    type=\"primary\"\n                    onClick={showDrawer}\n                >\n                    <Icon type=\"align-right\" />\n                </Button>\n                <Drawer\n                    title=\"Basic Drawer\"\n                    placement=\"right\"\n                    className=\"menu_drawer\"\n                    closable={false}\n                    onClose={onClose}\n                    visible={Visible}\n                >\n                    <LeftMenu mode=\"inline\" />\n                    <RightMenu mode=\"inline\" />\n                </Drawer>\n            </div>\n        </nav>\n    )\n}\n\nexport default NavBar\n","export function downloadBase64File(base64Data, filename) {\n    var element = document.createElement('a');\n    element.setAttribute('href', base64Data);\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}\n\nexport function base64StringtoFile(base64String, filename) {\n    var arr = base64String.split(','), mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n    while(n--){\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {type:mime});\n}\n\nexport function extractImageFileExtensionFromBase64(base64Data){\n    return base64Data.substring(\"data:image/\".length, base64Data.indexOf(\";base64\"))\n}\n\nexport function image64toCanvasRef(canvasRef, image64, pixelCrop){\n    const canvas = canvasRef // document.createElement('canvas');\n    canvas.width = pixelCrop.width;\n    canvas.height = pixelCrop.height;\n    const ctx = canvas.getContext('2d');\n    const image = new Image()\n    image.src = image64\n    image.onload = function() {\n        ctx.drawImage(\n          image,\n          pixelCrop.x,\n          pixelCrop.y,\n          pixelCrop.width,\n          pixelCrop.height,\n          0,\n          0,\n          pixelCrop.width,\n          pixelCrop.height\n        )\n    }\n}\n\nexport function getCroppedImg(canvasRef, image, crop) {\n    const canvas = canvasRef\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n}","import React, { useState } from 'react'\nimport Dropzone from 'react-dropzone';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { Icon } from 'antd'\n\n\nimport {\n    extractImageFileExtensionFromBase64,\n    getCroppedImg\n} from '../../../../utils/ReusableUtils'\n\nfunction DropAndCrop(props) {\n\n    const [Crop, setCrop] = useState({aspect: 1/1, x:0, y:0, width:100,height:100, unit:'px'})\n    const [ImageRef, setImageRef] = useState(null)\n    const imagePreviewCanvasRef = props.canvas\n    const setImageExt = props.setImageExt\n    const OriginFile = props.OriginFile\n    const setOriginFile = props.setOriginFile\n    const ImageSrc = props.ImageSrc\n    const setImageSrc = props.setImageSrc\n\n    const imageMaxSize = 5 * 1024 * 1024\n    const acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg, image/gif'\n    const acceptedFileTypesArray = acceptedFileTypes.split(\",\").map((item) => {return item.trim()})\n\n    const verifyFile = (files) => {\n        if(files && files.length > 0) {\n            const currentFile = files[0]\n            const currentFileType = currentFile.type\n            const currentFileSize = currentFile.size\n            if(currentFileSize > imageMaxSize) {\n                alert('이 파일은 너무 큽니다. ' + imageMaxSize/1024/1024 + 'MB이하의 파일만 가능합니다')//maxsize 알려주기\n                return false\n            }\n            if(!acceptedFileTypesArray.includes(currentFileType)){\n                alert('이 파일은 지원하지 않습니다.')\n                return false\n            }\n            return true\n        }\n    }\n\n    const onDrop = (files, rejectedFiles) => {\n        if(rejectedFiles && rejectedFiles.length > 0) {\n            verifyFile(rejectedFiles)\n        }\n        if(files && files.length > 0) {\n            const isVerified = verifyFile(files)\n            if(isVerified) {\n                const file = setOriginFile(files[0])\n                const reader = new FileReader()\n                reader.addEventListener(\"load\", () => {\n                    const myResult = reader.result\n                    setImageSrc(myResult)\n                    setImageExt(extractImageFileExtensionFromBase64(myResult))\n                }, false)\n                reader.readAsDataURL(file)\n            }\n        }\n\n        \n    }\n\n    const handleClearToDefault = (event) =>  {\n        if(event) event.preventDefault()\n        const canvas = imagePreviewCanvasRef.current\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n        setImageSrc(null)\n        setImageExt(null)\n        setCrop({aspect: 1/1, x:0, y:0, width:100,height:100, unit:'px'})\n    }\n\n    const makeClientCrop = (crop) => {\n        const canvasRef = imagePreviewCanvasRef.current\n        if (ImageRef && crop.width && crop.height) {\n            getCroppedImg(\n            canvasRef,\n            ImageRef,\n            crop\n          );\n        }\n    }\n\n    const handleOnCropChange = (crop) => {\n        setCrop(crop)\n    }\n\n    const handleImageLoaded = (image) => {\n        setImageRef(image)\n    }\n\n    const handleOnCropComplete = (crop) => {\n        makeClientCrop(crop)\n    }\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n           {ImageSrc !== null ?\n            <div style={{ width: '300px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <ReactCrop\n                    src={ImageSrc}\n                    crop={Crop}\n                    onImageLoaded={handleImageLoaded}\n                    onComplete={handleOnCropComplete}\n                    onChange={handleOnCropChange} />\n            </div>\n            :\n            <Dropzone\n                onDrop={onDrop}\n                multieple={false}\n                maxSize={imageMaxSize}\n                accept={acceptedFileTypes}>\n                {({ getRootProps, getInputProps }) => (\n                    <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }} {...getRootProps()}>\n                        <input {...getInputProps()} />\n                        <Icon type=\"plus\" style={{ fontSize: '3rem' }}/>\n                    </div>\n                )}\n            </Dropzone>}   \n            {\n                <div style={{ marginLeft: '3rem', width: '300px'}}>\n                    <p>Preview Canvas Crop</p>\n                    <canvas ref={imagePreviewCanvasRef}/>\n                    <button onClick={handleClearToDefault}>Clear</button>\n                </div>\n            } \n        </div>\n    )\n}\n\nexport default DropAndCrop\n","import React, { useEffect, useState } from 'react'\nimport { Typography, Button, Form, message, Input } from 'antd'\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios';\nimport DropAndCrop from './Section/DropAndCrop';\nimport {\n    base64StringtoFile\n} from '../../../utils/ReusableUtils'\nimport { v4 } from 'uuid'\nimport Calendar from 'react-calendar'\nimport 'react-calendar/dist/Calendar.css'\nimport moment from 'moment'\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction UploadPage(props) {\n        const user = useSelector(state => state.user);\n        \n        const [Category, setCategory] = useState(\"\")\n        const [ProdName, setProdName] = useState(\"\");\n        const [Artists, setArtist] = useState([])\n        const [Content, setContent] = useState(\"\");\n        const [Link, setLink] = useState(\"\");\n        const [StartDate, setStartDate] = useState(new Date());\n        const [EndDate, setEndDate] = useState(new Date())\n\n        const [OriginFile, setOriginFile] = useState(null);\n        const [ImageSrc, setImageSrc] = useState(null)\n        const [ImageExt, setImageExt] = useState(null)\n        const imagePreviewCanvasRef = React.createRef()\n\n        const uuid = v4();\n\n        useEffect(() => {\n            Axios.get('/api/artist/all')\n                .then(response => {\n                    if (response.data.success) {\n                        setArtist(response.data.artists)\n                    } else {\n                        alert('아티스트 정보를 가져오는데 실패했습니다.')\n                    }\n                })\n        }, [])\n\n        const onNameChange = (e) => {\n            setProdName(e.currentTarget.value)\n        }\n        const onContentChange = (e) => {\n            setContent(e.currentTarget.value)\n        }\n        const onCategoryChange = (e) => {\n            setCategory(e.currentTarget.value)\n        }\n        const onLinkChange = (e) => {\n            setLink(e.currentTarget.value)\n        }\n\n        async function onSubmit (e) {\n            e.preventDefault();\n            const imgSrc = ImageSrc\n            const FileName = ProdName\n\n            if(imgSrc) {\n                const canvasRef = imagePreviewCanvasRef.current\n                const imgSrcExt = ImageExt\n                const imageData64 = canvasRef.toDataURL('image/' + imgSrcExt)\n                const originFilename = FileName + '.' + imgSrcExt\n                const preFilename = FileName + \"_preview.\" + imgSrcExt\n                const newCroppedFile = base64StringtoFile(imageData64, preFilename)\n                // let originFormData = new FormData;\n                // let preFormData = new FormData;\n                // const config = {\n                //     header: {'content-type': 'multipart/form-data'}\n                // }\n                // originFormData.append(\"file\", OriginFile)\n                // preFormData.append(\"file\", newCroppedFile)\n                let image = await Axios.post('/api/prod/getUrl', {name: uuid + originFilename})\n                    .then(response => {\n                            return (response.data)\n                    })\n                Axios.put(image.postURL, OriginFile)\n                    .then(response => {\n                        console.log(response)\n                        if(response) {\n\n                        } else {\n                            alert('이미지 업로드에 실패했습니다.')\n                        }\n                    })\n                let preImage = await Axios.post('/api/prod/getPreUrl', {name: uuid + preFilename})\n                    .then(response => {\n                            return (response.data)\n                    })\n                Axios.put(preImage.postURL, newCroppedFile)\n                    .then(response => {\n                        console.log(response)\n                        if(response) {\n\n                        } else {\n                            alert('이미지 업로드에 실패했습니다.')\n                        }\n                    })\n                    \n                const variable = {\n                    'userId': user.userData._id,\n                    'name': ProdName,\n                    'artistId': Category,\n                    'link': Link,\n                    'mainImage': image.filename,\n                    'preImage': image.filename,\n                    'mainImagePath': image.getURL,\n                    'preImagePath': preImage.getURL,\n                    'startDate': StartDate,\n                    'endDate': EndDate,\n                    'content': Content\n                }\n\n                Axios.post('/api/prod/addProd', variable)\n                    .then(response => {\n                        if (response.data.success) {\n                            message.success('성공적으로 업로드를 완료했습니다.')\n                            props.history.push('/')\n                        } else {\n                            alert('데이터 저장에 실패했습니다.')\n                        }\n                    })\n                }\n        }\n\n        const refreshOriginFile = (file) => {\n            setOriginFile(file)\n            return file\n        }\n\n        const refreshImageSrc = (src) => {\n            setImageSrc(src)\n        }\n\n        const refreshImageExt = (ext) => {\n            setImageExt(ext)\n        }\n\n        const onStartDateChange = (date) => {\n            setStartDate(\n                date\n            )\n        }\n\n        const onEndDateChange = (date) => {\n            setEndDate(\n                date\n            )\n        }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Prod Upload </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <DropAndCrop\n                    OriginFile={OriginFile} setOriginFile={refreshOriginFile}\n                    ImageSrc={ImageSrc} setImageSrc={refreshImageSrc}\n                    setImageExt={refreshImageExt}\n                    canvas={imagePreviewCanvasRef}/>\n                <br />\n                <br />\n                <label>상품 이름</label>\n                <Input\n                    onChange={onNameChange}\n                    value={ProdName}\n                />\n                <br />\n                <br />\n                <label>내용</label>\n                <TextArea\n                    onChange={onContentChange}\n                    value={Content}\n                />\n                <br />\n                <br />\n                <div style={{ display: 'flex', justifyContent:'space-between' }}>\n                    <div style={{ marginLeft: '1rem', width: '45%' }}>\n                        <label>펀딩 시작일</label>\n                        <Calendar\n                            onChange={onStartDateChange}\n                            value={StartDate}\n                        />\n                    </div>\n                    <div style={{ marginRight: '1rem', width: '45%' }}>\n                        <label>펀딩 종료일</label>\n                        <Calendar\n                            onChange={onEndDateChange}\n                            value={EndDate}\n                        />\n                    </div>\n                </div>\n                <br />\n                <br />\n                <label>링크</label>\n                <TextArea\n                    onChange={onLinkChange}\n                    value={Link}\n                />\n                <br />\n                <br />\n                <select style={{ width: '150px', height: '2rem', border: '1px solid rgba(0,0,0,0.3)', outline: '0', borderRadius: '5px', paddingLeft: '0.5rem' }} onChange={onCategoryChange}>\n                    {Artists.map((artist, index) => (\n                        <option key={index} value={artist._id}>{artist.name}</option>\n                    ))}\n                </select>\n                <br />\n                <br />\n\n                <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default withRouter(UploadPage)\n","import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport GridCards from '../commons/GridCards';\nimport { Row } from 'antd';\n\nfunction MyPage() {\n\n    const [LikeProds, setLikeProds] = useState([])\n    const [MyProds, setMyProds] = useState([])\n\n    const user = localStorage.getItem('userId')\n\n    useEffect(() => {\n\n        const variable = {\n            userId: user\n        }\n        \n        Axios.post('/api/like/getMyLikeProds', variable)\n            .then(response => {\n                if (response.data.success) {\n                    setLikeProds(response.data.prods)\n                    console.log(response.data.prods)\n                } else {\n                    alert('좋아요 목록을 가져오는데 실패했습니다.')\n                }\n            })\n        \n        Axios.post('/api/prod/getMyProds', variable)\n            .then(response => {\n                if (response.data.success) {\n                    setMyProds(response.data.prods)\n\n                } else {\n                    alert('나의 게시물을 가져오는데 실패했습니다.')\n                }\n            })\n    }, [])\n\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2> 내가 좋아하는 굿즈 </h2>\n                <hr />\n                <Row gutter = {[16, 16]} type=\"flex\" style={{ alignItems: 'center'}} >\n                    {LikeProds && LikeProds.map((likeProd, index) => (\n                            <React.Fragment key={index}>\n                                <GridCards\n                                    image={`${process.env.REACT_APP_SERVER}${likeProd.prodId.preImage}`}\n                                    prodId={likeProd.prodId._id}\n                                    prodName={likeProd.prodId.name}\n                                /> \n                            </React.Fragment>\n                    ))}\n                </Row>\n            </div>\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n                <h2> 내가 올린 굿즈 </h2>\n                <hr />\n                <Row gutter = {[16, 16]} type=\"flex\" style={{ alignItems: 'center'}} >\n                    {\n                        MyProds && MyProds.map((myProd, index) => (\n                            <React.Fragment key={index}>\n                                <GridCards\n                                    image={`${process.env.REACT_APP_SERVER}${myProd.preImage}`}\n                                    prodId={myProd._id}\n                                    prodName={myProd.name}\n                                />\n                            </React.Fragment>\n                        ))}\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport default MyPage\n","import React, { useEffect } from 'react'\nimport { Typography, Button, Form, message, Input, Icon, Descriptions } from 'antd'\nimport { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction EntUploadPage(props) {\n\n    const [EntName, setEntName] = useState(\"\");\n    const [ImagePath, setImagePath] = useState(\"\");\n\n    const onNameChange = (e) => {\n        setEntName(e.currentTarget.value)\n    }\n\n    const onDrop = (files) => {\n        let formData = new FormData;\n        const config = {\n            header: {'content-type': 'multipart/form-data'}\n        }\n        formData.append(\"file\", files[0])\n        Axios.post('/api/ent/uploadImage', formData, config)\n            .then(response => {\n                if(response.data.success) {\n                    setImagePath(response.data.url)\n                } else {\n                    alert('파일 업로드에 실패했습니다.')\n                }\n                console.log(response.data.err)\n            })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const variable = {\n            'name': EntName,\n            'image': ImagePath,\n        }\n        Axios.post('/api/ent/addEnt', variable)\n            .then(response => {\n                if (response.data.success) {\n                    message.success('성공적으로 업로드를 완료했습니다.')\n                    setTimeout(() => {\n                        setEntName(\"\")\n                        setImagePath(\"\")\n                    }, 3000);\n                } else {\n                    alert('데이터 저장에 실패했습니다.')\n                }\n            })\n    }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Ent Upload </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <Dropzone\n                    onDrop={onDrop}\n                    multieple={false}\n                    maxSize={10000000}>\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex',\n                        alignItems: 'center', justifyContent: 'center' }} {...getRootProps()}>\n                            <input {...getInputProps()} />\n                            <Icon type=\"plus\" style={{ fontSize: '3rem' }}/>\n                        </div>\n                        )}\n                    </Dropzone>\n                </div>\n            <br />\n            <br />\n            <label>엔터 이름</label>\n            <Input\n                onChange={onNameChange}\n                value={EntName}\n            />\n            <br />\n            <br />\n\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                Submit\n            </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default EntUploadPage\n","import React, { useEffect } from 'react'\nimport { Typography, Button, Form, message, Input, Icon, Descriptions } from 'antd'\nimport { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport Axios from 'axios';\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction ArtistUploadPage() {\n\n    const [Category, setCategory] = useState(\"\")\n    const [ArtistName, setArtistName] = useState(\"\");\n    const [Ents, setEnts] = useState([])\n    const [ImagePath, setImagePath] = useState(\"\");\n\n    useEffect(() => {\n        Axios.get('/api/ent/all')\n            .then(response => {\n                if (response.data.success) {\n                    setEnts(response.data.ents)\n                } else {\n                    alert('아티스트 정보를 가져오는데 실패했습니다.')\n                }\n            })\n    }, [])\n\n    const onNameChange = (e) => {\n        setArtistName(e.currentTarget.value)\n    }\n    const onCategoryChange = (e) => {\n        setCategory(e.currentTarget.value)\n    }\n\n    const onDrop = (files) => {\n        let formData = new FormData;\n        const config = {\n            header: {'content-type': 'multipart/form-data'}\n        }\n        formData.append(\"file\", files[0])\n        Axios.post('/api/artist/uploadImage', formData, config)\n            .then(response => {\n                if(response.data.success) {\n                    setImagePath(response.data.url)\n                } else {\n                    alert('파일 업로드에 실패했습니다.')\n                }\n            })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const variable = {\n            'name': ArtistName,\n            'entId': Category,\n            'image': ImagePath,\n        }\n        Axios.post('/api/artist/addArtist', variable)\n            .then(response => {\n                if (response.data.success) {\n                    message.success('성공적으로 업로드를 완료했습니다.')\n                    setTimeout(() => {\n                        setArtistName(\"\")\n                        setCategory(\"\")\n                        setImagePath(\"\")\n                    }, 3000);\n                } else {\n                    alert('데이터 저장에 실패했습니다.')\n                }\n            })\n    }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Artist Upload </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <Dropzone\n                    onDrop={onDrop}\n                    multieple={false}\n                    maxSize={10000000}>\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex',\n                        alignItems: 'center', justifyContent: 'center' }} {...getRootProps()}>\n                            <input {...getInputProps()} />\n                            <Icon type=\"plus\" style={{ fontSize: '3rem' }}/>\n                        </div>\n                        )}\n                    </Dropzone>\n                </div>\n            <br />\n            <br />\n            <label>아티스트 이름</label>\n            <Input\n                onChange={onNameChange}\n                value={ArtistName}\n            />\n            <br />\n            <br />\n            <label>엔터 선택</label> <br />\n            <select style={{ width: '150px', height: '2rem', border: '1px solid rgba(0,0,0,0.3)', outline: '0', borderRadius: '5px', paddingLeft: '0.5rem' }} onChange={onCategoryChange}>\n                {Ents.map((ent, index) => (\n                    <option key={index} value={ent._id}>{ent.name}</option>\n                ))}\n            </select>\n            <br />\n            <br />\n\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                Submit\n            </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default ArtistUploadPage\n","import React, { useEffect, useState } from 'react'\nimport { Tooltip, Icon } from 'antd'\nimport Axios from 'axios'\n\nfunction Like(props) {\n    let variable = { }\n    if(props.prod) {\n        variable = { prodId: props.prodId, userId: props.userId }\n    } else {\n        variable = { prodId: props.prodId, commentId: props.commentId, userId: props.userId }\n    }\n\n    const [Likes, setLikes] = useState(0)\n    const [LikeAction, setLikeAction] = useState(null)\n\n    useEffect(() => {\n        \n        Axios.post('/api/like/getLikes', variable)\n            .then(response => {\n                if(response.data.success) {\n                    setLikes(response.data.likes.length)\n                    response.data.likes.map(like => {\n                        if(like.userId === variable.userId) {\n                            setLikeAction('liked')\n                        }\n                    })\n                } else {\n                    alert('좋아요 정보를 가져오는데 실패했습니다.')\n                }\n            })\n        \n    }, [Likes])\n\n    const onLike = () => {\n        if(LikeAction === null) {\n            Axios.post('/api/like/upLike', variable)\n                .then(response => {\n                    if(response.data.success) {\n                        setLikes(Likes + 1)\n                        setLikeAction('liked')\n                    } else {\n                        alert('좋아요 반영에 실패했습니다.')\n                    }\n                })\n        } else {\n            Axios.post('/api/like/unLike', variable)\n                .then(response => {\n                    if(response.data.success) {\n                        setLikes(Likes - 1)\n                        setLikeAction(null)\n                    } else {\n                        alert('좋아요 취소 반영에 실패했습니다.')\n                    }\n                })\n        }\n    }\n\n    return (\n        <div>\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    <Icon type=\"like\"\n                        theme={LikeAction === 'liked' ? \"filled\" : \"outlined\"}\n                        onClick={onLike}\n                    />\n                </Tooltip>\n            <span style={{ paddingLeft: '8px', cursor: 'auto' }}> {Likes} </span>\n            </span>\n        </div>\n    )\n}\n\nexport default Like\n","import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input } from 'antd'\nimport Axios from 'axios'\nimport { useSelector } from 'react-redux';\nimport Like from './Like'\n\nconst { TextArea } = Input;\n\n\nfunction SingleComment(props) {\n\n\n    const user = useSelector(state => state.user)\n\n    const [OpenReply, setOpenReply] = useState(false)\n    const [CommentValue, setCommentValue] = useState(\"\")\n\n    const onClickReplyOpen = () => {\n        setOpenReply(!OpenReply)\n    }\n\n    const onHandleChange = (e) => {\n        setCommentValue(e.currentTarget.value)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const variables = {\n            content: CommentValue,\n            userId: user.userData._id,\n            prodId: props.prodId,\n            responseTo: props.comment._id\n        }\n        Axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if(response.data.success) {\n                    props.refreshFunction(response.data.commentInfo)\n                    setCommentValue(\"\")\n                    setOpenReply(false)\n                } else {\n                    alert('댓글을 저장하지 못했습니다.')\n                }\n            })\n    }\n\n    const actions = [\n        <Like prodId={props.prodId} userId={localStorage.getItem('userId')} commentId={props.comment._id}/>\n        ,<span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\" style={{margin: '0 0 0 10px'}}>Reply to</span>\n    ]\n    return (\n        <div>\n            <Comment\n                actions={actions}\n                author={props.comment.userId.name}\n                avatar={<Avatar src={props.comment.userId.image} alt />}\n                content={ <p> {props.comment.content} </p>}\n            />\n            {OpenReply &&\n                <form style={{ display: 'flex' }} onSubmit={onSubmit} >\n                    <textarea\n                        style={{ width: '100%', borderRadius: '5px' }}\n                        onChange={onHandleChange}\n                        value={CommentValue}\n                        placeholder=\"코멘트를 작성해 주세요\"\n                    />\n                    <br />\n                    <button style={{ width: '20%', height: '52px' }} onClick={onSubmit} > Submit</button>\n                </form>\n            }\n        </div>\n    )\n}\n\nexport default SingleComment\n","import React, { useEffect, useState } from 'react'\nimport SingleComment from './SingleComment'\n\nfunction ReplyComment(props) {\n\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\n\n    useEffect(() => {\n        \n        let commentNumber = 0;\n        props.comment.map((comment) => {\n            if(comment.responseTo === props.parentCommentId) {\n                commentNumber++\n            }\n        })\n        setChildCommentNumber(commentNumber)\n    }, [props.comment])\n\n    let renderReplyComment = (parentCommentId) => (\n            props.comment.map((comment, index) => (\n            <React.Fragment>\n                {\n                    comment.responseTo === parentCommentId &&\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} prodId={props.prodId}/>\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} prodId={props.prodId} comment={props.comment}/>\n                    </div>\n                }\n\n            </React.Fragment>\n        )))\n\n    const onHandleChange = () => {\n        setOpenReplyComments(!OpenReplyComments)\n    }\n\n\n    return (\n        <div>\n            \n            {ChildCommentNumber > 0 && \n                <p style={{ fontSize: '12px', margin: 0, color: 'rgba(0,0,0,0.2)', marginLeft: '10px'}} onClick={onHandleChange}>\n                    View {ChildCommentNumber} more comment(s)\n                </p>\n            }\n            {OpenReplyComments &&\n                renderReplyComment(props.parentCommentId)\n            }\n        </div>\n    )\n}\n\nexport default ReplyComment\n","import React, { useState } from 'react'\nimport Axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport SingleComment from './SingleComment'\nimport ReplyComment from './ReplyComment'\n\nfunction Comment(props) {\n\n    const user = useSelector(state => state.user)\n    const prodId = props.prodId\n    const [commentValue, setcommentValue] = useState(\"\")\n\n    const handleClick = (e) => {\n        setcommentValue(e.currentTarget.value)\n\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const variables = {\n            content: commentValue,\n            userId: user.userData._id,\n            prodId: prodId\n        }\n        Axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if(response.data.success) {\n                    props.refreshFunction(response.data.commentInfo)\n                    setcommentValue(\"\")\n                } else {\n                    alert('댓글을 저장하지 못했습니다.')\n                }\n            })\n    }\n    return (\n        <div>\n            <br />\n            <p style={{margin: '0 10px 0 0'}}>Replies</p>\n            <hr />\n\n            {props.commentLists && props.commentLists.map((comment, index) => (\n                (!comment.responseTo &&\n                    <React.Fragment>\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} prodId={prodId}/>\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} prodId={prodId} comment={props.commentLists}/>\n                    </React.Fragment>\n                )\n            ))\n            }\n            {/* Comment Lists */}\n            \n\n            {/* Root Comment Form */}\n\n            <form style={{ display: 'flex' }} onSubmit={onSubmit} >\n                <textarea\n                    style={{ width: '80%', borderRadius: '5px', margin: 'auto' }}\n                    onChange={handleClick}\n                    value={commentValue}\n                    placeholder=\"코멘트를 작성해 주세요\"\n                />\n                <br />\n                <button style={{ width: '5%', height: '50px', margin: 'auto' }} onClick={onSubmit} > Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Comment\n","import React, { useEffect, useState } from 'react'\nimport { Tooltip, Icon, List } from 'antd'\nimport Axios from 'axios'\nimport { withRouter } from 'react-router-dom'\nimport Like from './Section/Like'\nimport Comment from './Section/Comment'\nimport moment from 'moment'\n\nfunction ProdDetailPage(props) {\n\n    const user = localStorage.getItem('userId')\n    const [Prod, setProd] = useState(null)\n    const [Comments, setComments] = useState([])\n    const [MainImage, setMainImage] = useState([])\n    const [PreImage, setPreImage] = useState([])\n    const [DDay, setDDay] = useState(0);\n    const today = moment().format('YYYY-MM-DD')\n\n    const prodId = props.match.params.prodId\n    const variable = {\n        prodId: prodId,\n        originName: MainImage,\n        PreName: PreImage\n    }\n\n    useEffect(() => {\n        \n        Axios.post('/api/prod/getProdInfo', variable)\n            .then(response => {\n                if(response.data.success) {\n                    setProd(response.data.prod)\n                    setMainImage(response.data.prod.mainImage)\n                    setPreImage(response.data.prod.preImage)\n                    setDDay(moment(response.data.prod.endDate).diff(today, 'days'))\n                } else {\n                    alert('게시글 정보를 가져오는데 실패했습니다.')\n                }\n            })\n\n        Axios.post('/api/comment/getComments', variable)\n            .then(response => {\n                if(response.data.success) {\n                    setComments(response.data.comments)\n                } else {\n                    alert('코멘트 정보를 가져오는 것을 실패했습니다.')\n                }\n            })\n\n    }, [])\n\n    const refreshFunction = (newComment) => {\n        setComments(Comments.concat(newComment))\n    }\n\n    const onDeleteClick = () => {\n        if((user === Prod.userId._id) || (user.isAdmin)) {\n            Axios.post('/api/prod/deleteProd', variable)\n                .then(response => {\n                    if(response.data.success) {\n                        props.history.push('/')\n                    } else {\n                        alert('상품 삭제에 실패했습니다.')\n                    }\n                })\n            } else {\n                alert('해당 상품 작성자만 삭제할 수 있습니다.')\n            }\n        }\n\n    const onModifyClick = () => {\n        props.history.push(`/modify/${prodId}`)\n    }\n\n    \n\n    return (\n        <div style={{ display: 'flex', justifyContent:'center', alignContent: 'center', alignItems:'center', width: '100%', height: '100%', flexDirection: 'column'}}>\n            {Prod &&\n            <>\n            <div style={{ display: 'flex', justifyContent:'center', width: '80%', height: '280px', alignContent: 'center', alignItems: 'center', textAlign: 'center', flexDirection: 'column'}}>\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                    <a href={`/artist/${Prod.artistId._id}`}>\n                        <span style={{ display: 'flex', alignItems: 'center', width:'50px', height: '50px', borderRadius: '50%', backgroundColor:'black', marginRight: '0.5rem' }}>\n                            <img style={{ maxWidth: '90%', display: 'block', margin: '0px auto', objectFit: 'contain' }} src={`http://localhost:5000/${Prod.artistId.image}`} alt=\"artistImage\" />\n                        </span>\n                        <h3 style={{padding: 0, margin: 0}}> {Prod.artistId.name} </h3>\n                    </a>\n                </div>\n                <h1 style={{fontWeight: 800, fontSize: '4vh', margin: '10px 0px'}}>{Prod.name}</h1>\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                    <span style={{ width:'25px', height: '25px', borderRadius: '50%', backgroundImage:'', marginRight: '0.5rem'}} />\n                    <h4> {Prod.userId.name} </h4>\n                </div>\n            </div>\n            <div style={{ display: 'flex', width: '80%', alignItems:'center'}}>\n                <div style={{ display: 'flex', width: '50%', flexDirection: 'column' }}>\n                    <img style={{ objectFit: 'contain', maxWidth: '100%' }} src={`${Prod.preImagePath}`} alt=\"prodPreImage\"/>\n                </div>\n                <div style={{ display: 'flex', width: '40%', flexDirection: 'column' }}>\n                    <h2 style={{fontWeight: 400, fontSize: '24px'}}> {Prod.content} </h2>\n                    <hr />\n                    <hr />\n                    <a href={Prod.link} target=\"_blank\">\n                        <h3 style={{textAlign:'right'}}> 사러가기 </h3>\n                    </a>\n                    <hr />\n                    {DDay >= 0 ?\n                        <h2>D-DAY {DDay}</h2>\n                        :\n                        <h2>판매가 종료된 상품입니다.</h2>\n                    }\n                    <div>\n                        <List.Item\n                            actions={[ <Like prod prodId={Prod._id} userId={localStorage.getItem('userId')}/>]}/>\n                    </div>\n                    {((user === Prod.userId._id) || user.isAdmin) && (\n                        <div>\n                            <button style={{ marginRight: '1rem' }} onClick={onModifyClick}> 수정하기</button>\n                            <button onClick={onDeleteClick}>지우기</button>\n                        </div>\n                        )}\n                </div>\n            </div>\n            <div style={{ display:'flex', marginTop: '5rem', flexDirection:'column' }}>\n                <img src={`${Prod.mainImagePath}`} alt=\"prodImage\"/>\n            </div>\n            </>\n            }\n            <div style={{ width: '100%', padding: '3rem 4rem' }}>\n                <Comment refreshFunction={refreshFunction} commentLists={Comments} prodId={prodId}/>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ProdDetailPage)\n","import React from 'react'\n\nfunction GridCard(props) {\n    const prod = props.prod\n    const index = props.index\n    return (\n        <div key={index} style={{ width: '100%', height: '300px', display: 'flex', justifyContent: 'center',marginTop: '1rem' }}>\n            <a href={`/prod/${prod._id}`}>\n                <div style={{width: '80%', height: '300px', display: 'flex', alignItems: 'center'}}>\n                    <div style={{ width: '270px', height: '270px', margin: 0 }}>\n                        <img style={{ height: '270px', objectFit: 'cover' }} src={`${prod.preImage}`} alt={prod.name}/>\n                    </div>\n                    <div style={{ display: 'flex', width: '700px', height: '90%', marginLeft: '48px', flexDirection:'column', justifyContent: 'center', textAlign: 'right'}}>\n                        <h1>{prod.name}</h1>\n                        <h2>{prod.content}</h2>\n                        <h3>{prod.userId.name}</h3>\n                    </div>\n                </div>\n                <hr style={{ color: 'grey' }}/>\n            </a>\n        </div>\n    )\n}\n\nexport default GridCard\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios';\nimport GridCard from './Section/GridCard';\n\nfunction ArtistDetailPage(props) {\n\n    const [Prods, setProds] = useState([]);\n    const variable = {\n        artistId: props.match.params.artistId\n    }\n\n    useEffect(() => {\n        Axios.post('/api/prod/getArtistProds', variable)\n            .then(response => {\n                if(response.data.success) {\n                    setProds(response.data.prods);\n                } else {\n                    alert('상품을 불러오는데 실패 했습니다.')\n                }\n            })\n    }, [])\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n            {Prods && Prods.map((prod, index) => (\n                <GridCard\n                    prod={prod}\n                    index={index} />\n            ))}\n        </div>\n    )\n}\n\nexport default withRouter(ArtistDetailPage)\n","import React, { useEffect, useState } from 'react'\nimport { Typography, Button, Form, message, Input, Icon, Descriptions } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport Axios from 'axios';\nimport DropAndCrop from '../UploadPage/Section/DropAndCrop';\nimport {\n    base64StringtoFile\n} from '../../../utils/ReusableUtils'\nimport { v4 } from 'uuid'\nimport Calendar from 'react-calendar'\n\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction UploadPage(props) {\n        const user = localStorage.getItem('userId')\n        \n        const [Category, setCategory] = useState(\"\")\n        const [ProdName, setProdName] = useState(\"\");\n        const [Artists, setArtist] = useState([])\n        const [Content, setContent] = useState(\"\");\n        const [Link, setLink] = useState(\"\");\n        const [StartDate, setStartDate] = useState(new Date());\n        const [EndDate, setEndDate] = useState(new Date())\n\n        const [OnDrop, setOnDrop] = useState(false)\n\n        const [MainImage, setMainImage] = useState(\"\");\n        const [PreImage, setPreImage] = useState(\"\");\n        const [MainImagePath, setMainImagePath] = useState(\"\");\n        const [PreImagePath, setPreImagePath] = useState(\"\");\n\n        const [OriginFile, setOriginFile] = useState(null);\n        const [ImageSrc, setImageSrc] = useState(null)\n        const [ImageExt, setImageExt] = useState(null)\n        const imagePreviewCanvasRef = React.createRef()\n\n        const variable = {\n            prodId: props.match.params.prodId\n        }\n        const uuid = v4();\n        useEffect(() => {\n            Axios.get('/api/artist/all')\n                .then(response => {\n                    if (response.data.success) {\n                        setArtist(response.data.artists)\n                    } else {\n                        alert('아티스트 정보를 가져오는데 실패했습니다.')\n                    }\n                })\n            \n            Axios.post('/api/prod/getProdInfo', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        if (response.data.prod.userId._id !== user) {\n                            props.history.push('/')\n                        }\n                        setCategory(response.data.prod.artistId._id)\n                        setProdName(response.data.prod.name)\n                        setContent(response.data.prod.content)\n                        setLink(response.data.prod.link)\n                        setMainImage(response.data.prod.mainImage)\n                        setPreImage(response.data.prod.preImage)\n                        setMainImagePath(response.data.prod.mainImagePath)\n                        setPreImagePath(response.data.prod.preImagePath)\n                        setStartDate(new Date(response.data.prod.startDate))\n                        setEndDate(new Date(response.data.prod.endDate))\n                    } else {\n                        alert('상품 정보를 가져오는데 실패했습니다.')\n                    }\n                })\n        }, [])\n\n        const onNameChange = (e) => {\n            setProdName(e.currentTarget.value)\n        }\n        const onContentChange = (e) => {\n            setContent(e.currentTarget.value)\n        }\n        const onCategoryChange = (e) => {\n            setCategory(e.currentTarget.value)\n        }\n        const onLinkChange = (e) => {\n            setLink(e.currentTarget.value)\n        }\n\n        const onDropClick = (e) => {\n            e.preventDefault()\n            setOnDrop(!OnDrop)\n        }\n\n        async function onSubmit (e) {\n            e.preventDefault();\n            const imgSrc = ImageSrc\n\n\n            if(imgSrc && OnDrop) {\n                const FileName = ProdName\n                const canvasRef = imagePreviewCanvasRef.current\n                const imgSrcExt = ImageExt\n                const imageData64 = canvasRef.toDataURL('image/' + imgSrcExt)\n                const preFilename = FileName + \"_preview.\" + imgSrcExt\n                const originFilename = FileName + '.' + imgSrcExt\n                const newCroppedFile = base64StringtoFile(imageData64, preFilename)\n                // let originFormData = new FormData;\n                // let preFormData = new FormData;\n                // const config = {\n                //     header: {'content-type': 'multipart/form-data'}\n                // }\n                // originFormData.append(\"file\", OriginFile)\n                // preFormData.append(\"file\", newCroppedFile)\n\n                await Axios.post('/api/prod/deleteImage', { name: MainImage })\n                    .then(response => {\n                        console.log(response)\n                    })\n                await Axios.post('/api/prod/deletePreImage', { name: PreImage })\n\n                // Axios.post('/api/file/deleteImage', {url: MainImage})\n                //     .then(response => {\n                //         if(!response.data.success) {\n                //             alert('파일 삭제에 실패했습니다.')\n                //         }\n                //     })\n                // Axios.post('/api/file/deleteImage', {url: PreImage})\n                //     .then(response => {\n                //         if(!response.data.success) {\n                //             alert('파일 삭제에 실패했습니다.')\n                //         }\n                //     })\n\n                let image = await Axios.post('/api/prod/getUrl', {name: uuid + originFilename})\n                    .then(response => {\n                            setMainImage(response.data.filename)\n                            setMainImagePath(response.data.getURL)\n                            return (response.data)\n                    })\n                await Axios.put(image.postURL, OriginFile)\n                    .then(response => {\n\n                    \n                })\n                let preImage = await Axios.post('/api/prod/getPreUrl', {name: uuid + preFilename})\n                    .then(response => {\n                        setPreImage(response.data.filename)\n                        setPreImagePath(response.data.getURL)\n                        return (response.data)\n                })\n                await Axios.put(preImage.postURL, newCroppedFile)\n                    .then(response => {\n\n                })\n            }\n            const variable = {\n                'prodId': props.match.params.prodId,\n                'userId': user,\n                'name': ProdName,\n                'artistId': Category,\n                'link': Link,\n                'preImage': PreImage,\n                'mainImage': MainImage,\n                'preImagePath': PreImagePath,\n                'mainImagePath': MainImagePath,\n                'startDate': StartDate,\n                'endDate': EndDate,\n                'content': Content\n            }\n            Axios.post('/api/prod/updateProd', variable)\n                .then(response => {\n                    if (response.data.success) {\n                        message.success('성공적으로 업로드를 완료했습니다.')\n                        props.history.push('/')\n                    } else {\n                        alert('데이터 저장에 실패했습니다.')\n                    }\n                })\n        }\n\n        const refreshOriginFile = (file) => {\n            setOriginFile(file)\n            return file\n        }\n\n        const refreshImageSrc = (src) => {\n            setImageSrc(src)\n        }\n\n        const refreshImageExt = (ext) => {\n            setImageExt(ext)\n        }\n\n        const onStartDateChange = (date) => {\n            setStartDate(date)\n        }\n\n        const onEndDateChange = (date) => {\n            setEndDate(date)\n        }\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n                <Title level={2}> Prod Modify </Title>\n            </div>\n            <Form onSubmit={onSubmit}>\n            {OnDrop === false ? \n                <React.Fragment>\n                    {PreImage && MainImage &&\n                    <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                        <div style={{ width:'45%' }}>\n                            <p>Preview</p>\n                            <img style={{ maxWidth: '100%', marginBottom: '2rem' }} src={`${PreImagePath}`} alt=\"thumbnail\" />\n                        </div>\n                        <div style={{ width:'45%' }}>\n                            <p>Main Image</p>\n                            <img style={{ maxWidth: '100%' }} src={`${MainImagePath}`} alt=\"mainImage\" />\n                        </div>\n                    </div>\n                    }\n                </React.Fragment>\n                :\n                <DropAndCrop\n                    OriginFile={OriginFile} setOriginFile={refreshOriginFile}\n                    ImageSrc={ImageSrc} setImageSrc={refreshImageSrc}\n                    setImageExt={refreshImageExt}\n                    canvas={imagePreviewCanvasRef}/>\n            }\n            {OnDrop===false ? \n                <button onClick={onDropClick}>이미지 변경</button>\n                :\n                <button onClick={onDropClick}>이미지 취소</button>\n            }\n            <br />\n            <br />\n            <label>상품 이름</label>\n            <Input\n                onChange={onNameChange}\n                value={ProdName}\n            />\n            <br />\n            <br />\n            <label>내용</label>\n            <TextArea\n                onChange={onContentChange}\n                value={Content}\n            />\n            <br />\n            <br />\n            <div style={{ display: 'flex', justifyContent:'space-between' }}>\n                <div style={{ marginLeft: '1rem', width: '45%' }}>\n                    <label>펀딩 시작일</label>\n                    <Calendar\n                        onChange={onStartDateChange}\n                        value={StartDate}\n                    />\n                </div>\n                <div style={{ marginRight: '1rem', width: '45%' }}>\n                    <label>펀딩 종료일</label>\n                    <Calendar\n                        onChange={onEndDateChange}\n                        value={EndDate}\n                    />\n                </div>\n            </div>\n            <br />\n            <br />\n            <label>링크</label>\n            <TextArea\n                onChange={onLinkChange}\n                value={Link}\n            />\n            <br />\n            <br />\n            <select style={{ width: '150px', height: '2rem', border: '1px solid rgba(0,0,0,0.3)', outline: '0', borderRadius: '5px', paddingLeft: '0.5rem' }} onChange={onCategoryChange}>\n                {Content && Artists.map((artist, index) => (\n                    artist._id === Category ? <option key={index} value={artist._id} selected>{artist.name}</option> : <option key={index} value={artist._id}>{artist.name}</option>\n                ))}\n            </select>\n            <br />\n            <br />\n\n            <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\n                Submit\n            </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default withRouter(UploadPage)\n","import React, { Suspense } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch } from \"react-router-dom\"\nimport Auth from \"../hoc/auth\"\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport UploadPage from \"./views/UploadPage/UploadPage\";\nimport MyPage from './views/MyPage/MyPage';\nimport EntUploadPage from './views/EntUploadPage/EntUploadPage';\nimport ArtistUploadPage from './views/ArtistUploadPage/ArtistUploadPage';\nimport ProdDetailPage from './views/ProdDetailPage/ProdDetailPage';\nimport ArtistDetailPage from './views/ArtistDetailPage/ArtistDetailPage';\nimport ProdModifyPage from './views/ProdModifyPage/ProdModifyPage'\n// import Footer from \"./views/Footer/Footer\";\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/upload\" component={Auth(UploadPage, true)} />\n          <Route exact path=\"/myPage\" component={Auth(MyPage, true)} />\n          <Route exact path=\"/uploadEnt\" component={Auth(EntUploadPage, true)} />\n          <Route exact path=\"/uploadArtist\" component={Auth(ArtistUploadPage, true)} />\n          <Route exact path=\"/prod/:prodId\" component={Auth(ProdDetailPage, null)} />\n          <Route exact path=\"/artist/:artistId\" component={Auth(ArtistDetailPage, null)} />\n          <Route exact path=\"/modify/:prodId\" component={Auth(ProdModifyPage, true)} />\n        </Switch>\n      </div>\n      {/* <Footer /> */}\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user\n})\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    AUTH_USER,\n    REGISTER_USER\n} from \"../_actions/types\"\n\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state , loginSuccess: action.payload }\n            break;\n        case REGISTER_USER:\n            return { ...state, register: action.payload }\n            break;\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n            break;\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}